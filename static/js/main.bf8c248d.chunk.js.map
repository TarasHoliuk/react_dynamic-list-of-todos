{"version":3,"sources":["api.ts","components/TodoList/TodoList.tsx","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["API_URL","loadTodos","a","fetch","response","json","loadUser","userId","TodoList","state","filteredTitle","filteredByStatus","todos","visibleTodos","todoStatusChanger","todoId","setState","currentState","map","todo","id","completed","titleFilter","filterFor","statusFilter","filter","title","includes","status","selectHandler","event","value","target","changeHandler","data","this","props","getSelectedUserId","selectedUserId","className","name","type","onChange","classNames","checked","onClick","React","Component","CurrentUser","selectedUser","getUser","currentProps","clearUser","email","phone","App","ReactDOM","render","document","getElementById"],"mappings":"kXAAMA,EAAU,oCAEHC,EAAS,uCAAG,4BAAAC,EAAA,sEACAC,MAAM,GAAD,OAAIH,EAAJ,WADL,cACjBI,EADiB,yBAGhBA,EAASC,QAHO,2CAAH,qDAMTC,EAAQ,uCAAG,WAAOC,GAAP,eAAAL,EAAA,sEACCC,MAAM,GAAD,OAAIH,EAAJ,kBAAqBO,IAD3B,cAChBH,EADgB,yBAGfA,EAASC,QAHM,2CAAH,sD,OCSRG,EAAb,4MACEC,MAAe,CACbC,cAAe,GACfC,iBAAkB,MAClBC,MAAO,GACPC,aAAc,IALlB,EAiBEC,kBAAoB,SAACC,GACnB,EAAKC,UAAS,SAAAC,GAAY,MAAK,CAC7BL,MAAOK,EAAaL,MAAMM,KAAI,SAAAC,GAM5B,OALIA,EAAKC,KAAOL,IAEdI,EAAKE,WAAaF,EAAKE,WAGlBF,UAzBf,EA8BEG,YAAc,SAACC,GACb,EAAKC,aAAa,EAAKf,MAAME,kBAC7B,EAAKK,UAAU,SAAAC,GAAY,MAAK,CAC9BJ,aAAcI,EAAaJ,aACxBY,QAAO,SAAAN,GAAI,OAAIA,EAAKO,MAAMC,SAASJ,WAlC5C,EAsCEC,aAAe,SAACI,GACd,EAAKZ,UAAU,SAAAC,GAAY,MAAK,CAC9BJ,aAAcI,EAAaL,MACxBa,QAAO,SAAAN,GACN,OAAQS,GACN,IAAK,MACH,OAAOT,EAET,IAAK,SACH,OAAQA,EAAKE,UAEf,IAAK,YACH,OAAOF,EAAKE,UAEd,QACE,OAAOF,WArDrB,EA2DEU,cA3DF,uCA2DkB,WAAOC,GAAP,eAAA5B,EAAA,6DACN6B,EAAUD,EAAME,OAAhBD,MADM,SAGR,EAAKf,SAAS,CAAEL,iBAAkBoB,IAH1B,OAKd,EAAKP,aAAa,EAAKf,MAAME,kBALf,2CA3DlB,wDAmEEsB,cAnEF,uCAmEkB,WAAOH,GAAP,eAAA5B,EAAA,6DACN6B,EAAUD,EAAME,OAAhBD,MADM,SAGR,EAAKf,SAAS,CAAEN,cAAeqB,IAHvB,OAKd,EAAKT,YAAY,EAAKb,MAAMC,eALd,2CAnElB,oJAQE,4BAAAR,EAAA,sEACqBD,IADrB,OACQiC,EADR,OAGEC,KAAKnB,SAAS,CACZJ,MAAOsB,EACPrB,aAAa,YAAKqB,KALtB,gDARF,0EA2EE,WAAU,IAAD,OACP,EAA8CC,KAAKC,MAA3CC,EAAR,EAAQA,kBAAmBC,EAA3B,EAA2BA,eAC3B,EAIIH,KAAK1B,MAHPI,EADF,EACEA,aACAH,EAFF,EAEEA,cACAC,EAHF,EAGEA,iBAGF,OACE,sBAAK4B,UAAU,WAAf,UACE,wCAEA,uBAAMA,UAAU,QAAhB,UACE,qBAAKA,UAAU,eAAf,SACE,uBACEC,KAAK,aACLC,KAAK,OACLV,MAAOrB,EACPgC,SAAU,SAACZ,GAAD,OAAW,EAAKG,cAAcH,IACxCS,UAAU,YAId,qBAAKA,UAAU,UAAf,SACE,qBAAKA,UAAU,SAAf,SACE,yBACEC,KAAK,cACLT,MAAOpB,EACP+B,SAAU,SAACZ,GAAD,OAAW,EAAKD,cAAcC,IAH1C,UAKE,wBAAQC,MAAM,MAAd,iBAGA,wBAAQA,MAAM,SAAd,oBAGA,wBAAQA,MAAM,YAAd,iCAQR,qBAAKQ,UAAU,2BAAf,SACE,oBAAIA,UAAU,iBAAd,SACG1B,EAAaK,KAAI,SAAAC,GAAI,OACpB,qBAEEoB,UAAWI,IACT,iBACA,CACE,6BAA8BxB,EAAKE,UACnC,0BAA2BF,EAAKE,YANtC,UAUE,kCACE,uBACEoB,KAAK,WACLG,QAASzB,EAAKE,UACdwB,QAAS,kBAAM,EAAK/B,kBAAkBK,EAAKC,OAE7C,4BAAID,EAAKO,WAGX,wBACEa,UAAS,2EAELD,IAAmBnB,EAAKZ,OAAS,kCAAoC,GAFhE,oDAKTkC,KAAK,SACLI,QAAS,kBAAMR,EAAkBlB,EAAKZ,SAPxC,yBASYY,EAAKZ,YA3BZY,EAAKC,kBA3H1B,GAA8B0B,IAAMC,WCJvBC,G,MAAb,4MACEvC,MAAe,CACbwC,aAAc,MAFlB,EAeEC,QAfF,sBAeY,4BAAAhD,EAAA,yDACJ+C,EAA4B,MAE5B,EAAKb,MAAME,eAHP,gCAIehC,EAAS,EAAK8B,MAAME,gBAJnC,OAINW,EAJM,cAOR,EAAKjC,SAAS,CAAEiC,iBAPR,2CAfZ,uDAKE,WACEd,KAAKe,YANT,gCASE,SAAmBC,GACbA,EAAab,iBAAmBH,KAAKC,MAAME,gBAC7CH,KAAKe,YAXX,oBAyBE,WACE,IAAQE,EAAcjB,KAAKC,MAAnBgB,UACAH,EAAiBd,KAAK1B,MAAtBwC,aAER,OAAOA,GACL,8BACE,sBAAKV,UAAU,cAAf,UACE,oBAAIA,UAAU,qBAAd,SACE,wDAAyBU,EAAa7B,QAExC,oBAAImB,UAAU,oBAAd,SACGU,EAAaT,OAEhB,mBAAGD,UAAU,qBAAb,SACGU,EAAaI,QAEhB,mBAAGd,UAAU,qBAAb,SACGU,EAAaK,QAGhB,wBACEb,KAAK,SACLI,QAAS,kBAAMO,KACfb,UAAU,6BAHZ,4BA7CV,GAAiCO,IAAMC,YCHjCQ,E,4MACJ9C,MAAe,CACb6B,eAAgB,G,EAGlBD,kBAAoB,SAACC,GACnB,EAAKtB,SAAS,CAAEsB,oB,EAGlBc,UAAY,WACV,EAAKpC,SAAS,CAAEsB,eAAgB,K,4CAGlC,WACE,IACEA,EACEH,KAAK1B,MADP6B,eAGF,OACE,sBAAKC,UAAU,MAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CACEF,kBAAmBF,KAAKE,kBACxBC,eAAgBA,MAIpB,qBAAKC,UAAU,eAAf,SACE,qBAAKA,UAAU,yBAAf,SACE,cAAC,EAAD,CACED,eAAgBA,EAChBc,UAAWjB,KAAKiB,uB,GA/BZN,IAAMC,WAwCTQ,IC/CfC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.bf8c248d.chunk.js","sourcesContent":["const API_URL = 'https://mate.academy/students-api';\n\nexport const loadTodos = async () => {\n  const response = await fetch(`${API_URL}/todos`);\n\n  return response.json();\n};\n\nexport const loadUser = async (userId: number) => {\n  const response = await fetch(`${API_URL}/users/${userId}`);\n\n  return response.json();\n};\n","import React from 'react';\nimport './TodoList.scss';\nimport classNames from 'classnames';\nimport { loadTodos } from '../../api';\n\ninterface Props {\n  getSelectedUserId: (selectedUserId: number) => void;\n  selectedUserId: number;\n}\n\ninterface State {\n  filteredTitle: string;\n  filteredByStatus: string;\n  todos: Todo[];\n  visibleTodos: Todo[];\n}\n\nexport class TodoList extends React.Component<Props, State> {\n  state: State = {\n    filteredTitle: '',\n    filteredByStatus: 'all',\n    todos: [],\n    visibleTodos: [],\n  };\n\n  async componentDidMount() {\n    const data = await loadTodos();\n\n    this.setState({\n      todos: data,\n      visibleTodos: [...data],\n    });\n  }\n\n  todoStatusChanger = (todoId: number) => {\n    this.setState(currentState => ({\n      todos: currentState.todos.map(todo => {\n        if (todo.id === todoId) {\n          // eslint-disable-next-line no-param-reassign\n          todo.completed = !todo.completed;\n        }\n\n        return todo;\n      }),\n    }));\n  };\n\n  titleFilter = (filterFor: string) => {\n    this.statusFilter(this.state.filteredByStatus);\n    this.setState((currentState => ({\n      visibleTodos: currentState.visibleTodos\n        .filter(todo => todo.title.includes(filterFor)),\n    })));\n  };\n\n  statusFilter = (status: string) => {\n    this.setState((currentState => ({\n      visibleTodos: currentState.todos\n        .filter(todo => {\n          switch (status) {\n            case 'all':\n              return todo;\n\n            case 'active':\n              return !todo.completed;\n\n            case 'completed':\n              return todo.completed;\n\n            default:\n              return todo;\n          }\n        }),\n    })));\n  };\n\n  selectHandler = async (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    await this.setState({ filteredByStatus: value });\n\n    this.statusFilter(this.state.filteredByStatus);\n  };\n\n  changeHandler = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    await this.setState({ filteredTitle: value });\n\n    this.titleFilter(this.state.filteredTitle);\n  };\n\n  render() {\n    const { getSelectedUserId, selectedUserId } = this.props;\n    const {\n      visibleTodos,\n      filteredTitle,\n      filteredByStatus,\n    } = this.state;\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n\n        <form className=\"field\">\n          <div className=\"control mb-3\">\n            <input\n              name=\"todo-title\"\n              type=\"text\"\n              value={filteredTitle}\n              onChange={(event) => this.changeHandler(event)}\n              className=\"input\"\n            />\n          </div>\n\n          <div className=\"control\">\n            <div className=\"select\">\n              <select\n                name=\"todo-filter\"\n                value={filteredByStatus}\n                onChange={(event) => this.selectHandler(event)}\n              >\n                <option value=\"all\">\n                  All\n                </option>\n                <option value=\"active\">\n                  Active\n                </option>\n                <option value=\"completed\">\n                  Completed\n                </option>\n              </select>\n            </div>\n          </div>\n        </form>\n\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {visibleTodos.map(todo => (\n              <li\n                key={todo.id}\n                className={classNames(\n                  'TodoList__item',\n                  {\n                    'TodoList__item--unchecked': !todo.completed,\n                    'TodoList__item--checked': todo.completed,\n                  },\n                )}\n              >\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={todo.completed}\n                    onClick={() => this.todoStatusChanger(todo.id)}\n                  />\n                  <p>{todo.title}</p>\n                </label>\n\n                <button\n                  className={`\n                    TodoList__user-button\n                    ${selectedUserId === todo.userId ? 'TodoList__user-button--selected' : ''}\n                    button\n                  `}\n                  type=\"button\"\n                  onClick={() => getSelectedUserId(todo.userId)}\n                >\n                  {`User #${todo.userId}`}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { loadUser } from '../../api';\nimport './CurrentUser.scss';\n\ninterface Props {\n  selectedUserId: number | null;\n  clearUser: () => void;\n}\n\ntype State = {\n  selectedUser: User | null;\n};\n\nexport class CurrentUser extends React.Component<Props, State> {\n  state: State = {\n    selectedUser: null,\n  };\n\n  componentDidMount() {\n    this.getUser();\n  }\n\n  componentDidUpdate(currentProps: Props) {\n    if (currentProps.selectedUserId !== this.props.selectedUserId) {\n      this.getUser();\n    }\n  }\n\n  getUser = async () => {\n    let selectedUser: User | null = null;\n\n    if (this.props.selectedUserId) {\n      selectedUser = await loadUser(this.props.selectedUserId);\n    }\n\n    this.setState({ selectedUser });\n  };\n\n  render() {\n    const { clearUser } = this.props;\n    const { selectedUser } = this.state;\n\n    return selectedUser && (\n      <div>\n        <div className=\"CurrentUser\">\n          <h2 className=\"CurrentUser__title\">\n            <span>{`Selected user: ${selectedUser.id}`}</span>\n          </h2>\n          <h3 className=\"CurrentUser__name\">\n            {selectedUser.name}\n          </h3>\n          <p className=\"CurrentUser__email\">\n            {selectedUser.email}\n          </p>\n          <p className=\"CurrentUser__phone\">\n            {selectedUser.phone}\n          </p>\n\n          <button\n            type=\"button\"\n            onClick={() => clearUser()}\n            className=\"button CurrentUser__button\"\n          >\n            Clear\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\n\ninterface State {\n  selectedUserId: number;\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedUserId: 0,\n  };\n\n  getSelectedUserId = (selectedUserId: number) => {\n    this.setState({ selectedUserId });\n  };\n\n  clearUser = () => {\n    this.setState({ selectedUserId: 0 });\n  };\n\n  render() {\n    const {\n      selectedUserId,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            getSelectedUserId={this.getSelectedUserId}\n            selectedUserId={selectedUserId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            <CurrentUser\n              selectedUserId={selectedUserId}\n              clearUser={this.clearUser}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}